import sys

sys.path.append(r'C:\Python27')
sys.path.append(r'C:\Python27\Lib')
sys.path.append(r'C:\Python27\Lib\site-packages')
sys.path.append(r'C:\Python27\DLLs')
import numpy as np
import pandas as pd

# df = pd.read_csv('dataset/2.txt',delimiter=' ',header = None)
# target = pd.read_csv('dataset/3.txt',header = None)
#
# df = df.iloc[:, :-2]
# df.head(20)
# all_data = []
#
# def get_text():
#     return "text from hello.py"
#
def add(arg1, arg2):
    return arg1 + arg2
# print("aaa")
# blocks = []
# for index, row in df.iterrows():
#     if row.isnull().all():
#         all_data += [np.array([blocks])]
#         blocks = []
#         continue
#     else:
#         blocks += [np.array(row)]
#         #print(row[0],index)
#
# all_data = np.array(all_data)
# all_data = all_data.reshape(all_data.shape[0],all_data.shape[2],all_data.shape[3])
#
# target = np.array(target)

import time

#from pyqcore.client import SimpleQCoreClient
#from pyqcore.examples.jpvow import load_jpvow
from sklearn import model_selection
from sklearn.metrics import accuracy_score, f1_score
from sklearn.neural_network import MLPClassifier
from sklearn.linear_model import LogisticRegression
from sklearn import svm


    # Train: 80% / Test: 20%
# X_train, X_test, y_train, y_test = model_selection.train_test_split(
#         all_data, target, test_size=0.15, random_state=1
#     )
# X_train = X_train.reshape(len(X_train), -1).astype(np.float64)
# X_test = X_test.reshape(len(X_test), -1).astype(np.float64)
# y_train = np.ravel(y_train)
# y_test = np.ravel(y_test)

#print("===LogisticRegression(Using Sklearn)===")
start = time.time()
lr_cls = LogisticRegression(C=0.5)
# lr_cls.fit(X_train, y_train)
# elapsed_time = time.time() - start
# print("elapsed_time:{0}".format(elapsed_time) + "[sec]")
# res = lr_cls.predict(X=X_test)
# # print("acc=", accuracy_score(y_test.tolist(), res))
# # print("f1=", f1_score(y_test.tolist(), res, average="weighted"))


from joblib import dump, load
# dump(lr_cls, "yanyixiansb.joblib")
lr_cls = load("C:\Users\YYX\Desktop\YAN\Project_New\Dynamic Room\yanyixiansb.joblib" )
a = "1.566669*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.577781*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.588892*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.600003*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.611114*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.622225*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.633336*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.644447*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.655559*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.66667*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.677781*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.688892*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.700003*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.711114*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.722225*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.733337*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.744448*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.755559*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.76667*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*1.777781*-5.030000*-5.030000*-5.030000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000*-4.896925*-4.896925*-4.896925*0.000000*0.000000*0.000000*-4.408195*-4.408195*-4.408195*0.000000*0.000000*0.000000*-5.180458*-5.180458*-5.180458*0.000000*0.000000*0.000000*-4.964385*-4.964385*-4.964385*-3.226000*-3.226000*-3.226000*-7.015240*-7.015240*-7.015240*1.000000*1.000000*1.000000*-6.998515*-6.998515*-6.998515*0.000000*0.000000*0.000000*-2.774269*-2.774269*-2.774269*-1.000000*-1.000000*-1.000000*0.000000*0.000000*0.000000*0.000000*0.000000*0.000000"
def findType(input):
    return (type(input))
def predict(input):
    dlist = input.strip(' ').split('*')
    print(dlist)
    dflo = map(float, dlist)
    darr = np.array(dflo)
    daresh = darr.reshape(1,1220)
    res = lr_cls.predict(daresh)
    return res
b = raw_input()
print(predict(a))

